ggplot(D_ar)+
geom_boxplot(aes(x=tetracycline, y=log(div)))
ggplot(D_ar)+
geom_boxplot(aes(x=tetracycline, y=log1p(div)))
D_tmp$tige
install.packages("library(patchwork)")
install.packages("patchwork")
library(patchwork)
D_ar$tetracycline
library(patchwork)
plot = NA
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
print(p)
}
library(patchwork)
plot = NA
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plot = plot + p
}
plot
library(patchwork)
plot = NA
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plot = plot + p
}
plot
plotlist = c()
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plotlist = c(plotlist, p)
}
grid.arrange(grobs=plot_list)
library(gridExtra)
library(gridExtra)
plotlist = c()
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plotlist = c(plotlist, p)
}
grid.arrange(grobs=plot_list)
library(gridExtra)
plotlist = c()
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plotlist = c(plotlist, p)
}
grid.arrange(grobs=plotlist)
library(gridExtra)
plotlist = list()
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plotlist = append(plotlist, p)
}
grid.arrange(grobs=plotlist)
library(gridExtra)
plotlist = list()
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plotlist = append(plotlist, p)
}
print(plotlist)
grid.arrange(grobs=plotlist)
plot_grid(plotlist = plist, ncol = 2)
plot_grid(plotlist = plotlist, ncol = 2)
wrap_plots(plotlist)
wrap_plots(plotlist)
multiplot(plotlist = myplots, cols = 4)
grid::multiplot(plotlist = myplots, cols = 4)
wrap_plots(plotlist)
library(gridExtra)
plotlist = list()
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plotlist = c(plotlist, p)
}
wrap_plots(plotlist)
library(gridExtra)
plotlist = list()
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plotlist = c(plotlist, list(p))
}
wrap_plots(plotlist)
library(gridExtra)
plotlist = list()
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plotlist = c(plotlist, list(p))
}
wrap_plots(plotlist)
plotlist = list()
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log1p(div)))
plotlist = c(plotlist, list(p))
}
wrap_plots(plotlist)
plotlist = list()
for(i in seq_along(intersect)){
antibiotic = intersect[i]
p <- ggplot(D_ar)+
geom_boxplot(aes(x=.data[[antibiotic]], y=log(n16)))
plotlist = c(plotlist, list(p))
}
wrap_plots(plotlist)
filter(D_ar, tobramycin == "R")
D_ar_tax <- select(D_tmp, intersect, n16, div,genus)
filter(D_ar_tax, tobramycin == "R")
filter(D_ar_tax, tobramycin == "R")$genus
filter(D_ar_tax, tobramycin == "R") %>%
select(genus) %>%
levels
filter(D_ar_tax, tobramycin == "R") %>%
select(genus) %>%
levels()
filter(D_ar_tax, tobramycin == "R") %>%
select(genus)
D_ar_tax <- select(D_tmp, intersect, n16, div,genus,family,order)
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order)
D_ar_tax <- select(D_tmp, intersect, n16, div,genus,family,order,phylum)
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order)
D_ar_tax <- select(D_tmp, intersect, n16, div,genus,family,order,phylum)
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,phylum)
colnames(D_tmp)
# Get the taxonomy info for all the different bacteria resistent to tobramycin
D_ar_tax <- select(D_tmp, intersect, n16, div,genus,family,order, class,phylum)
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,class,phylum)
# It seems most of them share the Gammaproteobacteria class / are from the..
levels(D$class)
plot(D_ar_tax) +
geom_bar(x=genus, y=nmean)
plot(D_ar_tax) +
geom_bar(x=phylum, y=div)
# It seems most of them share the Gammaproteobacteria class / are from the..
# But phylum is easier to plot :)
D_ar_tax$phylum
# Get the taxonomy info for all the different bacteria resistent to tobramycin
D_ar_tax <- select(D_tmp, intersect, n16, div,genus,family,order, class,phylum)
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,class,phylum)
# It seems most of them share the Gammaproteobacteria class / are from the..
# But phylum is easier to plot :)
D_ar_tax$phylum
plot(D_ar_tax) +
geom_bar(x=phylum, y=div)
plot(D_ar_tax) +
geom_boxplot(aes(x=phylum, y=div))
# It seems most of them share the Gammaproteobacteria class / are from the..
# But phylum is easier to plot :)
levels(D_ar_tax$phylum)
plot(D_ar_tax) +
geom_boxplot(aes(x=phylum, y=div))
# It seems most of them share the Gammaproteobacteria class / are from the..
levels(D_ar_tax$order)
mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma"))
mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma"))
mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
plot() +
geom_boxplot(aes(x=class, y=div))
mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
plot() +
geom_boxplot(aes(x=isGamma, y=div))
gammaORnot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma"))
gammaORnot
gammaORnot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria",factor("Gamma"),factor("notGamma")) )
gammaORnot
gammaORnot$isGamma
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,class,phylum)
gammaORnot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria",factor("Gamma"),factor("notGamma")) )
gammaORnot$isGamma
mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria",factor("Gamma"),factor("notGamma")) )
mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria",factor("Gamma"),factor("notGamma")) )$isGamma
mutate(D_ar_tax, isGamma = ifelse(1=1,factor("Gamma"),factor("notGamma")) )$isGamma
mutate(D_ar_tax, isGamma = ifelse(1==1,factor("Gamma"),factor("notGamma")) )$isGamma
mutate(D_ar_tax, isGamma = ifelse(1!=1,factor("Gamma"),factor("notGamma")) )$isGamma
mutate(D_ar_tax, isGamma = ifelse(2==1,factor("Gamma"),factor("notGamma")) )$isGamma
mutate(D_ar_tax, isGamma = ifelse(class == factor("Gammaproteobacteria"),factor("Gamma"),factor("notGamma")) )$isGamma
mutate(D_ar_tax, isGamma = ifelse(class == factor("Gammaproteobacteria"),factor("Gamma"),factor("notGamma")) )$isGamma
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,class,phylum)
mutate(D_ar_tax, isGamma = ifelse(class == factor("Gammaproteobacteria"),"Gamma","notGamma") )$isGamma
mutate(D_ar_tax, isGamma = ifelse(class == factor("Gammaproteobacteria"),"Gamma","notGamma") )
mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma") )
mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma") )$isGamma
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma"))
plot(GorNot) +
geom_boxplot(aes(x=isGamma, y=div))
GorNot$isGamma
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma))
plot(GorNot) +
geom_boxplot(aes(x=isGamma, y=div))
D_tmp <- read_csv("../data/dataset_joined.csv",show_col_types = FALSE)
D_tmp <- mutate(D_tmp, across(species:PH.range, factor))
D_tmp <- mutate(D_tmp, across(GC.content:total_genes, as.double))
D_tmp <- select(D_tmp, !c(NCBI.tax.ID,...1))
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library(xtable)
library(glue)
library(cowplot)
library(ggpubr)
target16S <- read_csv2("../data/ARtarget16s.csv",show_col_types = FALSE,col_names = FALSE)
targetvector <- as.array(target16S$X1)
found_16S <- as.array(colnames(select(D_tmp,lincomycin:spiramycin.II)))
intersect <- intersect(targetvector,found_16S)
D_ar <- select(D_tmp, intersect, n16, div)
D_ar_tax <- select(D_tmp, intersect, n16, div,genus,family,order, class,phylum)
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,class,phylum)
# It seems most of them share the Gammaproteobacteria class / are from the..
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma))
plot(GorNot) +
geom_boxplot(aes(x=isGamma, y=div))
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma)) %>%
filter(!is.na(GorNot))
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma)) %>%
filter(!is.na(GorNot))
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma)) %>%
filter(is.na(GorNot)==FALSE)
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma)) %>%
filter(is.na(isGamma)==FALSE)
plot(GorNot) +
geom_boxplot(aes(x=isGamma, y=div))
ggplot(GorNot) +
geom_boxplot(aes(x=isGamma, y=div))
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma))
ggplot(GorNot) +
geom_boxplot(aes(x=isGamma, y=div))
ggplot(GorNot) +
geom_boxplot(aes(x=isGamma, y=log1p(div)))
p1 <- ggplot(GorNot) +
geom_boxplot(aes(x=isGamma, y=log1p(div)))
p2 <- ggplot(D_ar)+
p1+p2
geom_boxplot(aes(x=tobramycin, y=log1p(div))
p1+p2
p1+p2
wrap_plots(p1,p2)
# Get the taxonomy info for all the different bacteria resistent to tobramycin
D_ar_tax <- select(D_tmp, intersect, n16, div,genus,family,order, class,phylum)
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,class,phylum)
# It seems most of them share the Gammaproteobacteria class / are from the..
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma))
p1 <- ggplot(GorNot) +
geom_boxplot(aes(x=isGamma, y=log1p(div)))
p2 <- ggplot(D_ar)+
geom_boxplot(aes(x=tobramycin, y=log1p(div))
wrap_plots(p1,p2)
D_ar
# Get the taxonomy info for all the different bacteria resistent to tobramycin
D_ar_tax <- select(D_tmp, intersect, n16, div,genus,family,order, class,phylum)
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,class,phylum)
# It seems most of them share the Gammaproteobacteria class / are from the..
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma))
p1 <- ggplot(GorNot) +
geom_boxplot(aes(x=isGamma, y=log1p(div)))
p2 <- ggplot(D_ar)+
geom_boxplot(aes(x=tobramycin, y=log1p(div))
plot_grid(p1,p2)
# Get the taxonomy info for all the different bacteria resistent to tobramycin
D_ar_tax <- select(D_tmp, intersect, n16, div,genus,family,order, class,phylum)
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,class,phylum)
# It seems most of them share the Gammaproteobacteria class / are from the..
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma))
p1 <- ggplot(GorNot) +
geom_boxplot(aes(x=isGamma, y=log1p(div)))
p2 <- ggplot(D_ar)+
geom_boxplot(aes(x=tobramycin, y=log1p(div)))
plot_grid(p1,p2)
# Get the taxonomy info for all the different bacteria resistent to tobramycin
D_ar_tax <- select(D_tmp, intersect, n16, div,genus,family,order, class,phylum)
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,class,phylum)
# It seems most of them share the Gammaproteobacteria class / are from the..
GorNot <- mutate(D_ar_tax, isGamma = ifelse(class == "Gammaproteobacteria","Gamma","notGamma")) %>%
mutate(isGamma=factor(isGamma))
p1 <- ggplot(GorNot) +
geom_boxplot(aes(x=isGamma, y=log1p(div)))
p2 <- ggplot(D_ar)+
geom_boxplot(aes(x=tobramycin, y=log1p(div)))
p3 <- ggplot(GorNot) +
geom_boxplot(aes(x=isGamma, y=log(n16)))
p4 <- ggplot(D_ar)+
geom_boxplot(aes(x=tobramycin, y=log(n16)))
plot_grid(p1,p2,p3,p4)
filter(D_ar_tax, class== "Gammaproteobacteria" )
filter(D_ar_tax, class== "Gammaproteobacteria" )
filter(D_ar_tax, tobramycin == "R") %>%
select(genus,family,order,class,phylum)
GorNot %>%
ggplot()+
geom_boxplot(aes(x=tobramycin, y=log(n16))) +
facet_wrap(~isGamma)
GorNot %>%
ggplot()+
geom_boxplot(aes(x=tobramycin, y=log1p(div))) +
facet_wrap(~isGamma)
GorNot %>%
ggplot()+
geom_boxplot(aes(x=tobramycin, y=(div))) +
facet_wrap(~isGamma)
GorNot %>%
ggplot()+
geom_boxplot(aes(x=tobramycin, y=log1p(div))) +
facet_wrap(~isGamma)
# There actually seem to be more
# Lest see for n16
# We expect n16 to go up for R again since the are correlated
GorNot %>%
ggplot()+
geom_boxplot(aes(x=tobramycin, y=log1p(n16))) +
facet_wrap(~isGamma)
# There actually seem to be more
# Lest see for n16
# We expect n16 to go up for R again since the are correlated
GorNot %>%
ggplot()+
geom_boxplot(aes(x=tobramycin, y=(n16))) +
facet_wrap(~isGamma)
library("tidyverse")
read_csv("../data/speciesinfo.csv",show_col_types = FALSE)
taxinfo <- read_csv("../data/hpc_tax_info_full.csv",show_col_types = FALSE)
species <- read_csv("../data/speciesinfo.csv",show_col_types = FALSE)
taxinfo <- read_csv("../data/hpc_tax_info_full.csv",show_col_types = FALSE)
taxinfo <- read_csv("../data/hpc_tax_info_full.csv",show_col_types = FALSE)
colnames()
taxinfo <- read_csv("../data/hpc_tax_info_full.csv",show_col_types = FALSE)
colnames(taxinfo)
taxinfo <- rename(GENUS = genus)
taxinfo <- rename(GENUS = "genus")
taxinfo <- rename(genus = GENUS)
colnames(taxinfo)
taxinfo <- rename(genus = GENUS)
taxinfo <- rename(taxinfo, genus = GENUS)
colnames(taxinfo)
D <- left_join(species, taxinfo, by="genus")
colnames(speceis)
colnames(species)
species <- read_csv("../data/genus_ribdif.csv",show_col_types = FALSE)
taxinfo <- read_csv("../data/hpc_tax_info_full.csv",show_col_types = FALSE)
taxinfo <- rename(taxinfo, genus = GENUS)
D <- left_join(species, taxinfo, by="genus")
View(D)
taxplot <- function(D, tax, name,ylimit){
plot <- D %>%
group_by({{tax}}) %>%
summarise(n=n()) %>%
mutate(tax_ordered = fct_reorder({{tax}},desc(n))) %>%
ggplot() +
geom_segment(aes(x=tax_ordered, xend = tax_ordered,y=0, yend=n)) +
xlab(glue("taxonomic {name}")) + ylab("Number of entries") +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
ggtitle(glue("Entries pr. {name}")) +
ylim(0,ylimit)
return(plot)
}
colnames(D)
# Plloting the different taxs
taxplot(D, PHYLUM, "phylum")
library(glue)
return(plot)
# Plloting the different taxs
taxplot(D, PHYLUM, "phylum")
taxplot <- function(D, tax, name){
plot <- D %>%
group_by({{tax}}) %>%
summarise(n=n()) %>%
mutate(tax_ordered = fct_reorder({{tax}},desc(n))) %>%
ggplot() +
geom_segment(aes(x=tax_ordered, xend = tax_ordered,y=0, yend=n)) +
xlab(glue("taxonomic {name}")) + ylab("Number of entries") +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
ggtitle(glue("Entries pr. {name}"))
return(plot)
}
# Plloting the different taxs
taxplot(D, PHYLUM, "phylum")
colnames(D)
species <- read_csv("../data/genus_ribdif.csv",show_col_types = FALSE)
taxinfo <- read_csv("../data/hpc_tax_info_full.csv",show_col_types = FALSE)
taxinfo <- rename(taxinfo, genus = GENUS)
D <- left_join(species, taxinfo, by="genus")
colnames(D)
library("tidyverse")
library(glue)
species <- read_csv("../data/genus_ribdif.csv",show_col_types = FALSE)
taxinfo <- read_csv("../data/hpc_tax_info_full.csv",show_col_types = FALSE)
taxinfo <- rename(taxinfo, genus = GENUS)
D <- left_join(species, taxinfo, by="genus")
colnames(D)
library(cowplot)
taxplot <- function(D, tax, name){
plot <- D %>%
group_by({{tax}}) %>%
summarise(n=n()) %>%
mutate(tax_ordered = fct_reorder({{tax}},desc(n))) %>%
ggplot() +
geom_segment(aes(x=tax_ordered, xend = tax_ordered,y=0, yend=n)) +
xlab(glue("taxonomic {name}")) + ylab("Number of entries") +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
ggtitle(glue("Entries pr. {name}"))
return(plot)
}
# Plloting the different taxs
p1 <- taxplot(D, ORDER, "phylum")
p2 <- taxplot(D, PHYLUM, "phylum")
plot_grid(p1,p2,labels ="auto")
taxplot <- function(D, tax, name){
plot <- D %>%
group_by({{tax}}) %>%
summarise(n=n()) %>%
mutate(tax_ordered = fct_reorder({{tax}},desc(n))) %>%
ggplot() +
geom_segment(aes(x=tax_ordered, xend = tax_ordered,y=0, yend=n)) +
xlab(glue("taxonomic {name}")) + ylab("Number of entries") +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
ggtitle(glue("Entries pr. {name}"))
return(plot)
}
# Plloting the different taxs
p1 <- taxplot(D, ORDER, "order")
p2 <- taxplot(D, PHYLUM, "phylum")
plot_grid(p1,p2,labels ="auto")
D %>%
group_by(PHYLUM) %>%
summarise(n = n()) %>%
mutate(tax_ordered = fct_reorder(PHYLUM,desc(n))) %>%
arrange(desc(n))
nrow(D)
D %>%
group_by(species) %>%
summarise(n = n()) %>%
mutate(tax_ordered = fct_reorder(species,desc(n))) %>%
arrange(desc(n))
taxplot <- function(D, tax, name){
plot <- D %>%
group_by({{tax}}) %>%
summarise(n=n()) %>%
mutate(tax_ordered = fct_reorder({{tax}},desc(n))) %>%
ggplot() +
geom_segment(aes(x=tax_ordered, xend = tax_ordered,y=0, yend=n)) +
xlab(glue("taxonomic {name}")) + ylab("Number of entries") +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
ggtitle(glue("Entries pr. {name}"))
return(plot)
}
# Plloting the different taxs
p1 <- taxplot(D, ORDER, "order")
p2 <- taxplot(D, PHYLUM, "phylum")
p2 <- taxplot(D, species, "species")
plot_grid(p1,p2,p3,labels ="auto")
taxplot <- function(D, tax, name){
plot <- D %>%
group_by({{tax}}) %>%
summarise(n=n()) %>%
mutate(tax_ordered = fct_reorder({{tax}},desc(n))) %>%
ggplot() +
geom_segment(aes(x=tax_ordered, xend = tax_ordered,y=0, yend=n)) +
xlab(glue("taxonomic {name}")) + ylab("Number of entries") +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
ggtitle(glue("Entries pr. {name}"))
return(plot)
}
# Plloting the different taxs
p1 <- taxplot(D, ORDER, "order")
p2 <- taxplot(D, PHYLUM, "phylum")
p3 <- taxplot(D, species, "species")
plot_grid(p1,p2,p3,labels ="auto")
