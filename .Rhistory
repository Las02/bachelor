install.packages("RSQLite")
library(RSQLite)
setwd("~/GitHub/bachelor")
conn <- dbConnect(SQLite(),"s16.sqlite")
conn
dblistTabels(conn)
dbListTabels(conn)
dbListTables(conn)
# QUERU
dbGetQuery(conn, "SELECT * FROM gcf2species.csv")
# QUERU
dbGetQuery(conn, "SELECT * FROM s16full_sequence")
# List all the tables available in the database
dbListTables(conn)
# QUERU
dbGetQuery(conn, "SELECT * FROM ncbi_dat")
# QUERU
D <- dbGetQuery(conn, "SELECT * FROM ncbi_dat")
D$gc
D$genome_components
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(tidyverse)
conn <- dbConnect(SQLite(),"s16.sqlite")
dbListTables(conn)
conn <- dbConnect(SQLite(),"../../s16.sqlite")
dbListTables(conn)
conn <- dbConnect(SQLite(),"../../../s16.sqlite")
dbListTables(conn)
# query the DB
dbGetQuery(conn, "SELECT * FROM ribdif_info")
# query the DB
dbGetQuery(conn, "species2V3V4sequence")
# query the DB
dbGetQuery(conn, "SELECT * FROM species2V3V4sequence")
# query the DB
sequences <- dbGetQuery(conn, "SELECT * FROM species2V3V4sequence")
# query the DB
joinD <- dbGetQuery(conn, "SELECT * FROM species2V3V4sequence")
joinD
group_by(joinD, sequence_id)
group_by(joinD, gcf) %>%
summarise(n(sequence_id))
joinD
colnames(joinD)
group_by(joinD, gcf) %>%
summarise(n(sequence_id))
group_by(joinD, gcf) %>%
summarise(n())
group_by(joinD, gcf) %>%
distinct(sequence_id)
group_by(joinD, gcf) %>%
distinct(sequence_id) %>%
summarise(unique = n())
group_by(joinD, gcf) %>%
summarise(total = n(),) %>%
distinct(sequence_id) %>%
summarise(unique = n())
group_by(joinD, gcf) %>%
summarise(total = n(),) %>%
distinct(sequence_id) %>%
summarise(unique = n())
group_by(joinD, gcf) %>%
summarise(total = n(),) %>%
distinct(sequence_id) %>%
summarise(unique = n()) %>%
ungroup()
joinD
group_by(joinD, gcf) %>%
summarise(total = n(),) %>%
distinct(sequence_id) %>%
summarise(unique = n()) %>%
ungroup()
group_by(joinD, gcf) %>%
summarise(total = n(),) %>%
ungroup()
colnames(joinD)
group_by(joinD, gcf) %>%
summarise(n_distinct(sequence_id))
group_by(joinD, gcf) %>%
summarise(distinct = n_distinct(sequence_id))
countD <- group_by(joinD, gcf) %>%
summarise(total = n(),) %>%
ungroup()
countD <- group_by(joinD, gcf) %>%
summarise(total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
summarise(distinct = n_distinct(sequence_id))
countD <- group_by(joinD, gcf) %>%
summarise(total = n(),) %>%
ungroup()
countD
countD <- group_by(joinD, gcf) %>%
summarise(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD
countD <- group_by(joinD, gcf) %>%
summarise(sequence_id, total = n(),) %>%
ungroup()
countD
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD
countD$total
colnames(joinD)
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id))
countD
colnames(joinD)
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id))
ggplot(countD, aes(x=total, y=distinct)) +
geom_point()
ggplot(countD, aes(x=total, y=distinct)) +
geom_tile()
ggplot(countD, aes(x=total, y=distinct)) +
geom_bin_2d()
ggplot(countD, aes(x=total, y=distinct)) +
geom_bin_2d()
ggplot(countD, aes(x=total, y=distinct)) +
geom_bin2d()
countD
colnames(joinD)
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
filter(total > 5)
ggplot(countD, aes(x=total, y=distinct)) +
geom_bin2d()
ggplot(countD, aes(x=total, y=distinct)) +
geom_histogram()
ggplot(countD, aes(x=total)) +
geom_histogram()
ggplot(countD, ) +
geom_histogram(aes(x=total))
ggplot(countD, ) +
geom_histogram(aes(x=total)) +
geom_histogram(aes(x=distinct))
ggplot(countD, ) +
geom_histogram(aes(x=total),col="red") +
geom_histogram(aes(x=distinct), col="blue")
ggplot(countD, ) +
geom_histogram(aes(x=total),col="red",alpha=0.5) +
geom_histogram(aes(x=distinct), col="blue",alpha=0.5)
colnames(joinD)
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id))
ggplot(countD, aes(x=total, y=distinct)) +
geom_bin2d()
ggplot(countD, ) +
geom_histogram(aes(x=total),col="red",alpha=0.5) +
geom_histogram(aes(x=distinct), col="blue",alpha=0.5)
ggplot(countD, ) +
geom_histogram(aes(x=total),col="red",alpha=0.5) +
geom_histogram(aes(x=distinct), col="blue",alpha=0.2)
ggplot(countD, ) +
geom_histogram(aes(x=distinct), col="blue",alpha=0.2)+
geom_histogram(aes(x=total),col="red",alpha=0.5)
# List of all the tables
dbListTables(conn)
ribdifD <- dbGetQuery(conn, "SELECT * FROM ribdif_info")
ribdifD
colnames(ribdifD)
ggplot(countD, ) +
geom_histogram(aes(x=distinct), col="blue",alpha=0.2)+
geom_histogram(aes(x=total),col="red",alpha=0.5) +
geom_histogram(aes(x=number_16s), data=ribdifD)
ggplot(countD, ) +
geom_histogram(aes(x=total),col="red",alpha=0.5) +
geom_histogram(aes(x=number_16s), data=ribdifD, alpha=0.5, col="green")
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise()
countD
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(gcf, distinct())
summarise(gcf, distinct
countD <- group_by(countD, gcf) %>%
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(gcf, distinct)
colnames(joinD)
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(gcf, distinct)
colnames(joinD)
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(gcf, distinct = first(distinct), total=first(total))
ggplot(countD, aes(x=total, y=distinct)) +
geom_bin2d()
ggplot(countD, ) +
geom_histogram(aes(x=distinct), col="blue",alpha=0.2)+
geom_histogram(aes(x=total),col="red",alpha=0.5)
ggplot(countD, ) +
geom_histogram(aes(x=total),col="red",alpha=0.5) +
geom_histogram(aes(x=number_16s), data=ribdifD, alpha=0.5, col="green")
countD
colnames(joinD)
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(gcf, distinct = first(distinct), total=first(total))
countD
View(countD)
group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(gcf, distinct = first(distinct), total=first(total))
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(gcf, distinct = first(distinct), total=first(total))
group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(distinct = first(distinct), total=first(total))
colnames(joinD)
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(distinct = first(distinct), total=first(total))
countD
ggplot(countD, aes(x=total, y=distinct)) +
geom_bin2d()
ggplot(countD, ) +
geom_histogram(aes(x=distinct), col="blue",alpha=0.2)+
geom_histogram(aes(x=total),col="red",alpha=0.5)
ggplot(countD, ) +
geom_histogram(aes(x=total),col="red",alpha=0.5) +
geom_histogram(aes(x=number_16s), data=ribdifD, alpha=0.5, col="green")
View(ribdifD)
inner_join(ribdifD, countD, by="gcf")
inner_join(ribdifD, countD, by="gcf") %>%
select(gcf, number_16s, distinct())
inner_join(ribdifD, countD, by="gcf") %>%
select(gcf, number_16s, distinct)
inner_join(ribdifD, countD, by="gcf") %>%
select(gcf, number_16s, distinct) %>%
mutate(diff = number_16s - distinct) %>%
filter(diff != 0)
inner_join(ribdifD, countD, by="gcf") %>%
select(genus,gcf, number_16s, distinct) %>%
mutate(diff = number_16s - distinct) %>%
filter(diff != 0)
# List of all the tables
dbListTables(conn)
ribdifD <- dbGetQuery(conn, "SELECT * FROM ribdif_info LEFT JOIN species ON species.gcf = ribdif_info.gcf")
View(ribdifD)
inner_join(ribdifD, countD, by="gcf") %>%
select(genus,species,gcf, number_16s, distinct) %>%
mutate(diff = number_16s - distinct) %>%
filter(diff != 0)
colnames(joinD)
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(distinct = first(distinct), total=first(total))
countD
ggplot(countD, aes(x=total, y=distinct)) +
geom_bin2d()
ggplot(countD, ) +
geom_histogram(aes(x=distinct), col="blue",alpha=0.2)+
geom_histogram(aes(x=total),col="red",alpha=0.5)
# There is some differences
ggplot(countD, ) +
geom_histogram(aes(x=total),col="red",alpha=0.5) +
geom_histogram(aes(x=number_16s), data=ribdifD, alpha=0.5, col="green")
inner_join(ribdifD, countD, by="gcf") %>%
select(genus,species,gcf, number_16s, distinct) %>%
mutate(diff = number_16s - distinct) %>%
filter(diff != 0)
ribdifD
ribdifD <- dbGetQuery(conn, "SELECT * FROM ribdif_info LEFT JOIN species ON gcf = gcf")
species.
# Connect to the DB
conn <- dbConnect(SQLite(),"../../../s16.sqlite")
# List of all the tables
dbListTables(conn)
# query the DB
joinD <- dbGetQuery(conn, "SELECT * FROM species2V3V4sequence")
ribdifD <- dbGetQuery(conn, "SELECT * FROM ribdif_info LEFT JOIN species ON species.gcf = ribdif_info.gcf")
ribdifD
ribdifD %>% select(gcf)
ribdifD
select(ribdifD,1)
select(ribdifD,!1)
select(ribdifD,1,2,3,4,5,6,7,8,9)
select(ribdifD,1,2,3,4,5,6,7)
select(ribdifD,1,2,3,4,5,6,7,8)
select(ribdifD,1,2,3,4,5,6,7,8,9)
# Connect to the DB
conn <- dbConnect(SQLite(),"../../../s16.sqlite")
# List of all the tables
dbListTables(conn)
# query the DB
joinD <- dbGetQuery(conn, "SELECT * FROM species2V3V4sequence")
ribdifD <- dbGetQuery(conn, "SELECT * FROM ribdif_info LEFT JOIN species ON species.gcf = ribdif_info.gcf")
select(ribdifD,1,2,3,4,5,6,7,8,9)
ribdifD
select(ribdifD,number_16s, 1, genus)
select(ribdifD,number_16s, 2, genus)
ribdifD <- select(ribdifD,number_16s, 2, genus)
inner_join(ribdifD, countD, by="gcf") %>%
select(genus,species,gcf, number_16s, distinct) %>%
mutate(diff = number_16s - distinct) %>%
filter(diff != 0)
ribdifD <- select(ribdifD,number_16s, 2, genus,species)
# Connect to the DB
conn <- dbConnect(SQLite(),"../../../s16.sqlite")
# List of all the tables
dbListTables(conn)
# query the DB
joinD <- dbGetQuery(conn, "SELECT * FROM species2V3V4sequence")
ribdifD <- dbGetQuery(conn, "SELECT * FROM ribdif_info LEFT JOIN species ON species.gcf = ribdif_info.gcf")
ribdifD <- select(ribdifD,number_16s, 2, genus,species)
inner_join(ribdifD, countD, by="gcf") %>%
select(genus,species,gcf, number_16s, distinct) %>%
mutate(diff = number_16s - distinct) %>%
filter(diff != 0)
inner_join(ribdifD, countD, by="gcf") %>%
select(genus,species,gcf, number_16s, total) %>%
mutate(diff = number_16s - total) %>%
filter(diff != 0)
inner_join(ribdifD, countD, by="gcf") %>%
select(genus,species,gcf, number_16s, total) %>%
mutate(diff = number_16s - total) %>%
filter(diff != 0) %>%
arrange(genus)
# Connect to the DB
conn <- dbConnect(SQLite(),"../../../s16.sqlite")
# List of all the tables
dbListTables(conn)
# query the DB
joinD <- dbGetQuery(conn, "SELECT * FROM species2s16full_sequence")
ribdifD <- dbGetQuery(conn, "SELECT * FROM ribdif_info LEFT JOIN species ON species.gcf = ribdif_info.gcf")
colnames(joinD)
countD <- group_by(joinD, gcf) %>%
mutate(sequence_id, total = n(),) %>%
ungroup()
countD <- group_by(countD, gcf) %>%
mutate(distinct = n_distinct(sequence_id)) %>%
summarise(distinct = first(distinct), total=first(total))
countD
ggplot(countD, aes(x=total, y=distinct)) +
geom_bin2d()
ggplot(countD, ) +
geom_histogram(aes(x=distinct), col="blue",alpha=0.2)+
geom_histogram(aes(x=total),col="red",alpha=0.5)
# There is some differences
ggplot(countD, ) +
geom_histogram(aes(x=total),col="red",alpha=0.5) +
geom_histogram(aes(x=number_16s), data=ribdifD, alpha=0.5, col="green")
ribdifD <- select(ribdifD,number_16s, 2, genus,species)
inner_join(ribdifD, countD, by="gcf") %>%
select(genus,species,gcf, number_16s, total) %>%
mutate(diff = number_16s - total) %>%
filter(diff != 0) %>%
arrange(genus)
nrow(countD)
