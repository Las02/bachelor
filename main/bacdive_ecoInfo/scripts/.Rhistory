/mnt/c/Users/Bruger/Documents/GitHub/bachelor/main/MakingFancyPhylTree/scripts
Rhome()
R.home()
setwd("C:/Users/Bruger/Documents/GitHub/bachelor/main/bacdive_ecoInfo/scripts")
library("tidyverse")
# Read in the output format
D <- read.csv("../data/EnvInfooutput.csv")
D <- replace(D, D == "", NA)
D <- filter(D, !is.na(optimum))
D_small <- mutate(D, temp_opt=as.integer(range)) %>%
select(!c(X,optimum,range))
ggplot(D_small) +
geom_histogram(aes(x=temp_opt))
# some extramophiles
filter(D_small, temp_opt > 60)
# Read in the data from ribdif
ribdif_dat <- read.csv("../../makingNewInfo/gcf_n16s_genus.csv")
# find mean of number of 16s and total dif
# TODO maybe not mean but for each but needs more work
ribdif_genus_info= group_by(ribdif_dat, genus) %>%
summarise(mean_n16 = mean(number_16s), mean_div = mean(total_div), nspecies = mean(n_species))
ribdif_genus_info <- rename(ribdif_genus_info)
ribdif_dat
D
D
View(D)
mutate(D, distinct(species))
mutate(D, distinct(species))
mutate(D, levels(species))
mutate(D, levels(species))
mutate(D, levels(species))
levels(D$species)
(D$species)
distinct(D$species)
levels(D$species)
unique(D$species)
nrow(unique(D$species))
length(unique(D$species))
length(D$species)
length(unique(D$species))
length(unique(D$species))
length(D$species)
# find species seen twice
summarise(D, species)
# find species seen twice
group_by(D, species)
# find species seen twice
group_by(D, species) %>%
summarise(count(species))
# find species seen twice
group_by(D, species) %>%
summarise(n(species))
# find species seen twice
group_by(D, species) %>%
summarise(n())
# find species seen twice
group_by(D, species) %>%
summarise(number=n()) %>%
filter(number > 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("C:/Users/Bruger/Documents/GitHub/bachelor/main/bacdive_ecoInfo/scripts")
read.csv("../data/speciesinfo.csv")
D <- read.csv("../data/speciesinfo.csv")
View(D)
plot(D)
D
str(D)
D <- read.csv("../data/EnvInfooutput.csv")
D <- replace(D, D == "", NA)
D <- filter(D, !is.na(optimum))
D_small <- mutate(D, temp_opt=as.integer(range)) %>%
select(!c(X,optimum,range))
str(D)
View(D)
