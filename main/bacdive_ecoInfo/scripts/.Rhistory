library("tidyverse")
D <- read.csv("../data/EnvInfooutput.csv")
View(D)
View(D)
summary(D)
head(D)
is.na(D)
replace(D, D == "", NA)
D <- replace(D, D == "", NA)
D
summary(D)
D
head(D)
filter(D, !is.na(gram.stain))
D <- filter(D, !is.na(gram.stain))
head(D)
D <- filter(D, !is.na(optimum))
D <- read.csv("../data/EnvInfooutput.csv")
D <- replace(D, D == "", NA)
D <- filter(D, !is.na(optimum))
D
D
mutate(D, as.integer(range))
D_small <- mutate(D, as.integer(range))
plot(D_small)
plot(D_small)
D_small <- mutate(D, as.integer(range)) %>%
select(!X)
plot(D_small)
D_small <- mutate(D, opt=as.integer(range)) %>%
select(!c(X,optimum))
plot(D_small)
D_small <- mutate(D, opt=as.integer(range)) %>%
select(!c(X,optimum,range))
plot(D_small)
plot(D_small,col=species)
D_small
plot(D_small,col=Species)
str(D)
plot(D_small,col=D_small$species)
plot(D_small)
ggplot(D_small) +
hist(opt)
ggplot(D_small) +
hist(aes(x=opt))
ggplot(D_small) +
hist(aes(y=opt))
ggplot(D_small) +
geom_histogram(aes(y=opt))
ggplot(D_small) +
geom_histogram(aes(x=opt))
D_small <- mutate(D, temp_opt=as.integer(range)) %>%
select(!c(X,optimum,range))
ggplot(D_small) +
geom_histogram(aes(x=opt))
ggplot(D_small) +
geom_histogram(aes(x=temp_opt))
filter(D_small, temp_opt > 60)
# Read in the data from ribdif
# TODO should be changed to reading it from db?
ribdif_dat <- read.csv("../../makingNewInfo/gcf_n16s_genus.csv")
# find mean of number of 16s and total dif
ribdif_genus_info= group_by(ribdif_dat, genus) %>%
summarise(mean_n16 = mean(number_16s), mean_div = mean(total_div), nspecies = mean(n_species))
ribdif_genus_info <- rename(ribdif_genus_info, GENUS = genus)
ribdif_genus_info
D <- read.csv("../data/EnvInfooutput.csv")
D <- replace(D, D == "", NA)
D <- filter(D, !is.na(optimum))
D_small <- mutate(D, temp_opt=as.integer(range)) %>%
select(!c(X,optimum,range))
ggplot(D_small) +
geom_histogram(aes(x=temp_opt))
# some extramophiles
filter(D_small, temp_opt > 60)
# Read in the data from ribdif
# TODO should be changed to reading it from db?
ribdif_dat <- read.csv("../../makingNewInfo/gcf_n16s_genus.csv")
# find mean of number of 16s and total dif
ribdif_genus_info= group_by(ribdif_dat, genus) %>%
summarise(mean_n16 = mean(number_16s), mean_div = mean(total_div), nspecies = mean(n_species))
ribdif_genus_info <- rename(ribdif_genus_info, GENUS = genus)
ribdif_genus_info
ribdif_genus_info <- rename(ribdif_genus_info)
# Read in the data from ribdif
# TODO should be changed to reading it from db?
ribdif_dat <- read.csv("../../makingNewInfo/gcf_n16s_genus.csv")
# find mean of number of 16s and total dif
ribdif_genus_info= group_by(ribdif_dat, genus) %>%
summarise(mean_n16 = mean(number_16s), mean_div = mean(total_div), nspecies = mean(n_species))
ribdif_genus_info <- rename(ribdif_genus_info)
View(ribdif_dat)
# Join the two datasets
left_join(D_small, ribdif_genus_info, on="genus")
rlang::last_error()
# Join the two datasets
left_join(D_small, ribdif_genus_info, by="genus")
# Join the two datasets
D_joined <- left_join(D_small, ribdif_genus_info, by="genus")
str(D_joined)
ggplot(D_joined) +
geom_histogram(aes(x=mean_n16))
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=mean_n16))
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=log(mean_n16)))
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=log(mean_n16), col = genus))
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=log(mean_n16), col = genus)) +
geom_histogram(aes(x=temp_opt))
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=log(mean_n16), col = genus)) +
theme(legend.position="none")
D_joined <- filter(D_joined, mean_n16 > 0)
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=log(mean_n16), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=(mean_n16), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=(mean_n16), col = genus)) +
theme(legend.position="none") +
facet_wrap(~genus)
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=(mean_n16), col = genus)) +
theme(legend.position="none")
ribdif_genus_info
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=(mean_n16), col = genus)) +
theme(legend.position="none")
str(D_joined)
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=(mean_div), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=mean_n16,y=(mean_div), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=log(mean_n16),y=log(mean_div), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=(mean_n16),y=log(mean_div), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=(mean_n16),y=(mean_div), col = genus)) +
theme(legend.position="none")
# Read in the output format
D <- read.csv("../data/EnvInfooutput.csv")
D <- replace(D, D == "", NA)
D <- filter(D, !is.na(optimum))
D_small <- mutate(D, temp_opt=as.integer(range)) %>%
select(!c(X,optimum,range))
ggplot(D_small) +
geom_histogram(aes(x=temp_opt))
# some extramophiles
filter(D_small, temp_opt > 60)
# Read in the data from ribdif
ribdif_dat <- read.csv("../../makingNewInfo/gcf_n16s_genus.csv")
# find mean of number of 16s and total dif
# TODO maybe not mean but for each but needs more work
ribdif_genus_info= group_by(ribdif_dat, genus) %>%
summarise(mean_n16 = mean(number_16s), mean_div = mean(total_div), nspecies = mean(n_species))
ribdif_genus_info <- rename(ribdif_genus_info)
# Join the two datasets
D_joined <- left_join(D_small, ribdif_genus_info, by="genus")
D_joined <- filter(D_joined, mean_n16 > 0)
# It seems to be kinda genus specific. BUT THATS BEcause we took mean n16
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=(mean_n16), col = genus)) +
theme(legend.position="none") +
facet_wrap(~genus)
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=(mean_n16), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=log(mean_n16), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=(mean_n16), col = genus)) +
theme(legend.position="none")
View(D_joined)
View(D_small)
View(D)
ggplot(D_joined) +
geom_point(aes(x=(mean_n16),y=(mean_div), col = genus)) +
theme(legend.position="none")
View(D_joined)
ggplot(D_joined) +
geom_bar(aes(x=factor(motility), y=mean_n16))
ggplot(D_joined) +
geom_bar(aes(x=(motility), y=mean_n16))
D_joined$mean_n16
str(D_joined)
D_joined <- mutate(D_joined, motility = factor(motility))
ggplot(D_joined) +
geom_bar(aes(x=(motility), y=mean_n16))
geom_bar(aes(x=(motility))
ggplot(D_joined) +
ggplot(D_joined) +
geom_bar(aes(x=motility))
D_joined <- mutate(D_joined, motility = factor(motility)) %>%
filter(motility %in% c("no","yes"))
ggplot(D_joined) +
geom_bar(aes(x=motility))
ggplot(D_joined) +
geom_boxplot(aes(x=motility, y=mean_n16))
ggplot(D_joined) +
geom_boxplot(aes(x=motility, y=log(mean_n16)))
lm(log(mean_n16) ~ motility, data=D_joined)
fit <- lm(log(mean_n16) ~ motility, data=D_joined)
anova(fit)
plot(fit)
par(mfrow=c(2,2))
plot(fit)
ggplot(D_joined) +
geom_boxplot(aes(x=gram.stain, y=log(mean_n16)))
D_joined <- left_join(D_small, ribdif_genus_info, by="genus")
D_joined <- filter(D_joined, mean_n16 > 0)
# It seems to be kinda genus specific. BUT THATS BEcause we took mean n16
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=(mean_n16), col = genus)) +
theme(legend.position="none") +
facet_wrap(~genus)
ggplot(D_joined) +
geom_point(aes(x=temp_opt,y=(mean_n16), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=(mean_n16),y=(mean_div), col = genus)) +
theme(legend.position="none")
D_motil <- mutate(D_joined, motility = factor(motility)) %>%
filter(motility %in% c("no","yes"))
# Motility seems to have no effect'
ggplot(D_motil) +
geom_boxplot(aes(x=motility, y=log(mean_n16)))
fit <- lm(log(mean_n16) ~ motility, data=D_motil)
anova(fit)
par(mfrow=c(2,2))
plot(fit)
D_gram <- mutate(D_joined, gram = factor(gram)) %>%
filter(!is.na(gram))
D_gram <- mutate(D_joined, gram = factor(gram)) %>%
filter(!is.na(gram))
D_gram <- mutate(D_joined, gram = factor(gram))
D_gram <- mutate(D_joined, gram = factor(gram.stain)) %>%
filter(!is.na(gram))
ggplot(D_joined) +
geom_boxplot(aes(x=gram, y=log(mean_n16)))
ggplot(D_gram) +
geom_boxplot(aes(x=gram, y=log(mean_n16)))
D_gram <- mutate(D_joined, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative"))
ggplot(D_gram) +
geom_boxplot(aes(x=gram, y=log(mean_n16)))
ggplot(D_gram) +
geom_boxplot(aes(x=gram, y=(mean_n16)))
ggplot(D_gram) +
geom_boxplot(aes(x=gram, y=log(mean_n16)))
fit <- lm(log(mean_n16) ~ gram, data=D_gram)
anova(fit)
par(mfrow=c(2,2))
plot(fit)
anova(fit)
ggplot(D_gram) +
geom_boxplot(aes(x=gram, y=log(mean_n16)))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
D <- read.csv("../data/EnvInfooutput500.csv")
D <- replace(D, D == "", NA)
D <- filter(D, !is.na(optimum))
D_small <- mutate(D, temp_opt=as.integer(range)) %>%
select(!c(X,optimum,range))
ggplot(D_small) +
geom_histogram(aes(x=temp_opt))
## Both
D_gram <- mutate(D_motil, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative"))
## Both
D_gram_mortil <- mutate(D_motil, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative"))
fit <- lm(log(mean_n16) ~ gram + motility + gram:motility , data=D_gram_mortil)
anova(fit)
update(fit, .~-gram:motility)
fit <- update(fit, .~-gram:motility)
anova(fit)
fit <- update(fit, .~-gram:motility)
anova(fit)
fit <- lm(log(mean_n16) ~ gram + motility + gram:motility , data=D_gram_mortil)
anova(fit)
step(fit)
fit <- step(fit)
anova(fit)
fit <- lm(log(mean_n16) ~ gram + motility + gram:motility , data=D_gram_mortil)
anova(fit)
fit2 <- step(fit, k=log(nrow(D_gram_mortil)))
anova(fit)
fit <- lm(log(mean_n16) ~ mean_div + gram + motility + gram:mean_div , data=D_gram_mortil)
anova(fit)
anova(fit)
fit2 <- step(fit, k=log(nrow(D_gram_mortil)))
anova(fit)
fit2 <- step(fit, k=log(nrow(D_gram_mortil),test="F"))
fit2 <- step(fit, k=log(nrow(D_gram_mortil)))
Anova(fit)
import(car)
install.packages("car")
import(car)
library(car)
Anova(fit)
Anova(fit2)
plot(fit2)
## More
D_gram_mortil <- mutate(D_motil, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative"))
fit <- lm(log(mean_n16) ~ log(mean_div) + gram + motility + gram:mean_div , data=D_gram_mortil)
fit <- lm(log(mean_n16) ~ (mean_div) + gram + motility + gram:mean_div , data=D_gram_mortil)
anova(fit)
fit2 <- step(fit, k=log(nrow(D_gram_mortil)))
library(car)
Anova(fit2)
plot(fit2)
ggplot(D_gram) +
geom_boxplot(aes(x=gram, y=log(mean_n16),col=gram))
ggplot(D_gram) +
geom_point(aes(x=gram, y=log(mean_n16),col=gram))
ggplot(D_gram) +
geom_point(aes(x=mean_div, y=log(mean_n16),col=gram))
fit <- lm(log(mean_n16) ~ (temp_opt) + gram + motility + gram:mean_div , data=D_gram_mortil)
anova(fit)
fit <- lm(log(mean_n16) ~ (temp_opt) + gram + motility + gram , data=D_gram_mortil)
anova(fit)
fit2 <- step(fit, k=log(nrow(D_gram_mortil)))
library(car)
Anova(fit2)
fit <- lm(log(mean_n16) ~ (temp_opt) + gram + motility + gram:temp_opt , data=D_gram_mortil)
anova(fit)
fit2 <- step(fit, k=log(nrow(D_gram_mortil)))
library(car)
Anova(fit2)
ggplot(D_gram) +
geom_point(aes(x=mean_div, y=log(mean_n16),col=gram))
ggplot(D_gram) +
geom_point(aes(x=temp_opt, y=log(mean_n16),col=gram))
str(D_gram)
## More
D_gram_mortil <- mutate(D_motil, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative")) %>%
filter(!is.na(temp_opt))
fit <- lm(log(mean_n16) ~ (temp_opt) + gram + motility + gram:temp_opt , data=D_gram_mortil)
anova(fit)
str(D_gram_mortil)
## More
D_gram_mortil <- mutate(D_motil, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative")) %>%
filter(!is.na(temp_opt)) %>%
mutate(mean_n16 = as.numeric(mean_n16))
str(D_gram_mortil)
## More
D_gram_mortil <- mutate(D_motil, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative")) %>%
filter(!is.na(temp_opt)) %>%
mutate(mean_n16 = as.numeric(mean_n16),
temp_opt = as.numeric(temp_opt))
str(D_gram_mortil)
str(D_gram_mortil)
fit <- lm(log(mean_n16) ~ temp_opt + gram + motility + gram:temp_opt , data=D_gram_mortil)
anova(fit)
fit2 <- step(fit, k=log(nrow(D_gram_mortil)))
library(car)
Anova(fit2)
anova(fit2)
nrow(fit)
nrow(fi2)
nrow(D_gram_mortil)
View(D_gram_mortil)
D_gram <- mutate(D_joined, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative"))
# There is sig but it might just be due to taxonomy relationship
# would be good idea to take more tax data into consideration
ggplot(D_gram) +
geom_boxplot(aes(x=gram, y=log(mean_n16)))
fit <- lm(log(mean_n16) ~ gram, data=D_gram)
anova(fit)
#par(mfrow=c(2,2))
#plot(fit)
anova(fit)
fit <- lm((mean_n16) ~ gram, data=D_gram)
anova(fit)
fit <- lm((log(mean_n16) ~ gram, data=D_gram)
## More VIRKER IKKE alle df == 1
D_gram_mortil <- mutate(D_motil, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative")) %>%
filter(!is.na(temp_opt)) %>%
mutate(mean_n16 = as.numeric(mean_n16),
temp_opt = as.numeric(temp_opt))
anova(fit)
fit <- lm((log(mean_n16) ~ gram, data=D_gram)
## More VIRKER IKKE alle df == 1
D_gram_mortil <- mutate(D_motil, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative")) %>%
filter(!is.na(temp_opt)) %>%
mutate(mean_n16 = as.numeric(mean_n16),
temp_opt = as.numeric(temp_opt))
str(D_gram_mortil)
# There is sig but it might just be due to taxonomy relationship
# would be good idea to take more tax data into consideration
ggplot(D_gram) +
geom_boxplot(aes(x=gram, y=log(mean_n16)))
fit <- lm((log(mean_n16) ~ gram, data=D_gram)
fit <- lm(log(mean_n16) ~ gram, data=D_gram)
anova(fit)
D_gram
str(D_gram)
# Gram or not ####
D_gram <- mutate(D_joined, gram = factor(gram.stain)) %>%
filter(gram %in% c("positive", "negative"))
D_gram
str(D_gram)
View(D_gram)
anova((lm(mean_n16 ~ temp_opt)))
anova((lm(mean_n16 ~ temp_opt)),Data = D_gram_mortil)
anova((lm(mean_n16 ~ temp_opt),Data = D_gram_mortil))
fit <- lm(mean_n16 ~ temp_opt,Data = D_gram_mortil)
D_gram_mortil
fit <- lm(mean_n16 ~ temp_opt ,Data = D_gram_mortil)
fit <- lm(mean_n16 ~ temp_opt ,data = D_gram_mortil)
anova(fit)
Anova(fit)
str(D_gram_mortil)
fit <- lm(c(1,2,3,4) ~ c(2,4,6,8))
Anova(fit)
fit <- lm(seq(1,100,1) ~ seq(1,400,4))
Anova(fit)
fit <- lm(c(1,1,3,4,) ~ c(2,4,6,8))
Anova(fit)
fit <- lm(c(1,1,3,4,) ~ c(2,4,6,8))
Anova(fit)
rnorm(10,1,1)
fit <- lm(rnorm(100,1,10)~ rnorm(100,2,2))
Anova(fit)
ggplot(D_gram) +
geom_point(aes(x=temp_opt, y=log(mean_n16),col=gram))
View(D_joined)
D_gram_mortil
sml <- mutate(D_gram_mortil, std_n16 = (mean_n16 - mean(mean_n16)/sd(mean_n16)))
sml <- mutate(D_gram_mortil, std_n16 = (mean_n16 - mean(mean_n16))/sd(mean_n16),
std_temp = (temp_opt - mean(temp_opt))/sd(temp_opt)
)
ggplot(sml) +
geom_point(aes(x=std_n16, y=mean_n16,col=gram))
ggplot(sml) +
geom_point(aes(x=std_n16, y=mean_n16))
ggplot(sml) +
geom_point(aes(x=std_temp, y=std_n16))
sml <- mutate(D_gram_mortil, log_std_n16 = (log(mean_n16) - mean(log(mean_n16)))/sd(log(mean_n16)),
std_temp = (temp_opt - mean(temp_opt))/sd(temp_opt)
)
ggplot(sml) +
geom_point(aes(x=std_temp, y=log_std_n16))
ggplot(D_joined) +
geom_point(aes(x=(mean_n16),y=(mean_div), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=(temp_opt),y=(mean_div), col = genus)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=(temp_opt),y=(mean_div), col = mean_n16)) +
theme(legend.position="none")
ggplot(D_joined) +
geom_point(aes(x=(temp_opt),y=(mean_div), col = mean_n16))
ggplot(D_joined) +
geom_point(aes(x=(temp_opt),y=(mean_n16), col = mean_div))
ggplot(D_joined) +
geom_point(aes(x=(temp_opt),y=(mean_div), col = mean_n16))
ggplot(D_joined) +
geom_point(aes(x=(temp_opt),y=(mean_div), col = mean_n16)) +
geom_smooth()
ggplot(D_joined) +
geom_point(aes(x=(temp_opt),y=(mean_div), col = mean_n16)) +
geom_smooth(x=temp_opt, y=mean_div)
ggplot(D_joined) +
geom_point(aes(x=(temp_opt),y=(mean_div), col = mean_n16)) +
geom_smooth(aes(x=temp_opt, y=mean_div))
ggplot(D_joined) +
geom_point(aes(x=(temp_opt),y=(mean_div), col = mean_n16)) +
geom_smooth(aes(x=mean_div, y=temp_opt))
ggplot(D_joined) +
geom_point(aes(x=(mean_div),y=(temp_opt), col = mean_n16)) +
geom_smooth(aes(x=mean_div, y=temp_opt))
temp_opt
ggplot(D_joined) +
geom_point(aes(x=(temp_opt),y=(mean_div), col = mean_n16)) +
geom_smooth(aes(x=temp_opt, y=mean_div))
### Does nspecies have effect
ggplot(D_joined) +
geom_point(aes(x=n_speceis, y=mean_n16))
### Does nspecies have effect
ggplot(D_joined) +
geom_point(aes(x=nspecies, y=mean_n16))
### Does nspecies have effect
ggplot(D_joined) +
geom_point(aes(x=nspecies, y=mean_std))
### Does nspecies have effect
ggplot(D_joined) +
geom_point(aes(x=nspecies, y=mean_div))
### Does nspecies have effect
ggplot(D_joined) +
geom_point(aes(x=nspecies, y=log(mean_div)))
### Does nspecies have effect
ggplot(D_joined) +
geom_point(aes(x=log(nspecies), y=log(mean_div)))
